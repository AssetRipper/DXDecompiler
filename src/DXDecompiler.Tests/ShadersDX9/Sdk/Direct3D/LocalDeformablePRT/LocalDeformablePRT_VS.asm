//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   int $NumBones;
//   float4x4 g_mViewProjection;
//   float4x3 g_mWorldMatrixArray[26];
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_mWorldMatrixArray c0      78
//   g_mViewProjection   c78      4
//   $NumBones           c82      1
//

    vs_2_0
    def c87, 3, 2, 0, 0
    def c83, 1, 0, 0, 0
    def c84, 0, 1, 0, 0
    def c85, 0, 0, 1, 0
    def c86, 0, 0, 0, 1
    dcl_position v0
    dcl_normal v1
    dcl_tangent v2
    dcl_blendweight v3
    dcl_blendindices v4
    dcl_texcoord v5
    slt r0, v4, -v4
    frc r1, v4
    add r2, -r1, v4
    slt r1, -r1, r1
    mad r0, r0, r1, r2
    mul r1, r0, c87.x
    mova a0.w, r1.x
    dp3 r2.x, v2, c0[a0.w]
    mova a0.w, r1.x
    dp3 r2.y, v2, c1[a0.w]
    mova a0.w, r1.x
    dp3 r2.z, v2, c2[a0.w]
    mul r2.xyz, r2, v3.x
    mova a0.w, r1.y
    dp3 r3.x, v2, c0[a0.w]
    mova a0.w, r1.y
    dp3 r3.y, v2, c1[a0.w]
    mova a0.w, r1.y
    dp3 r3.z, v2, c2[a0.w]
    mov r2.w, v3.x
    mov r4.x, c83.x
    add r3.w, -r4.x, c82.x
    slt r4.w, c83.w, r3.w
    mul r5, r2, r4.w
    mad r6.xyz, r3, v3.y, r5
    mad r6.w, r4.w, r2.w, v3.y
    mad r2, r4.w, -r2, r6
    slt r3.x, r4.w, r3.w
    mad r2, r3.x, r2, r5
    add r5.w, r2.w, v3.z
    mova a0.w, r1.z
    dp3 r6.x, v2, c0[a0.w]
    mova a0.w, r1.z
    dp3 r6.y, v2, c1[a0.w]
    mova a0.w, r1.z
    dp3 r6.z, v2, c2[a0.w]
    mad r5.xyz, r6, v3.z, r2
    mova a0.w, r1.x
    dp3 r6.x, v1, c0[a0.w]
    mova a0.w, r1.x
    dp3 r6.y, v1, c1[a0.w]
    mova a0.w, r1.x
    dp3 r6.z, v1, c2[a0.w]
    mul r6.xyz, r6, v3.x
    mul r4.xyz, r4.w, r6
    mova a0.w, r1.y
    dp3 r6.x, v1, c0[a0.w]
    mova a0.w, r1.y
    dp3 r6.y, v1, c1[a0.w]
    mova a0.w, r1.y
    dp3 r6.z, v1, c2[a0.w]
    mad r6.xyz, r6, v3.y, r4
    mov r6.w, c87.y
    lrp r7, r3.x, r6, r4
    slt r3.y, r7.w, r3.w
    mul r3.y, r3.y, r3.x
    lrp r6, r3.y, r5, r2
    add r2.w, r6.w, v3.w
    mova a0.w, r1.w
    dp3 r4.x, v2, c0[a0.w]
    mova a0.w, r1.w
    dp3 r4.y, v2, c1[a0.w]
    mova a0.w, r1.w
    dp3 r4.z, v2, c2[a0.w]
    mad r2.xyz, r4, v3.w, r6
    mova a0.w, r1.z
    dp3 r4.x, v1, c0[a0.w]
    mova a0.w, r1.z
    dp3 r4.y, v1, c1[a0.w]
    mova a0.w, r1.z
    dp3 r4.z, v1, c2[a0.w]
    mad r5.xyz, r4, v3.z, r7
    mov r5.w, c87.x
    lrp r8, r3.y, r5, r7
    slt r3.z, r8.w, r3.w
    mova a0.w, r3.w
    dp4 r0.x, r0, c83[a0.w]
    mul r0.x, r0.x, c87.x
    mul r0.y, r3.z, r3.y
    lrp r5, r0.y, r2, r6
    add r0.z, -r5.w, c83.x
    mova a0.w, r1.x
    dp4 r2.x, v0, c0[a0.w]
    mova a0.w, r1.x
    dp4 r2.y, v0, c1[a0.w]
    mova a0.w, r1.x
    dp4 r2.z, v0, c2[a0.w]
    mul r2.xyz, r2, v3.x
    mova a0.w, r1.y
    dp4 r4.x, v0, c0[a0.w]
    mova a0.w, r1.y
    dp4 r4.y, v0, c1[a0.w]
    mova a0.w, r1.y
    dp4 r4.z, v0, c2[a0.w]
    mul r4.xyz, r4, v3.y
    mul r3.xzw, r3.x, r4.xyyz
    mad r2.xyz, r4.w, r2, r3.xzww
    mova a0.w, r1.z
    dp4 r4.x, v0, c0[a0.w]
    mova a0.w, r1.z
    dp4 r4.y, v0, c1[a0.w]
    mova a0.w, r1.z
    dp4 r4.z, v0, c2[a0.w]
    mul r1.xyz, r4, v3.z
    mad r1.xyz, r3.y, r1, r2
    mova a0.w, r1.w
    dp4 r2.x, v0, c0[a0.w]
    mova a0.w, r1.w
    dp4 r2.y, v0, c1[a0.w]
    mova a0.w, r1.w
    dp4 r2.z, v0, c2[a0.w]
    mul r2.xyz, r2, v3.w
    mad r1.xyz, r0.y, r2, r1
    mova a0.w, r0.x
    dp4 r2.x, v0, c0[a0.w]
    mova a0.w, r0.x
    dp4 r2.y, v0, c1[a0.w]
    mova a0.w, r0.x
    dp4 r2.z, v0, c2[a0.w]
    mad r2.xyz, r2, r0.z, r1
    mov r2.w, c83.x
    dp4 oPos.x, r2, c78
    dp4 oPos.y, r2, c79
    dp4 oPos.z, r2, c80
    dp4 oPos.w, r2, c81
    mova a0.w, r1.w
    dp3 r1.x, v1, c0[a0.w]
    mova a0.w, r1.w
    dp3 r1.y, v1, c1[a0.w]
    mova a0.w, r1.w
    dp3 r1.z, v1, c2[a0.w]
    mul r1.xyz, r1, v3.w
    mad r1.xyz, r0.y, r1, r8
    mova a0.w, r0.x
    dp3 r2.x, v1, c0[a0.w]
    mova a0.w, r0.x
    dp3 r2.y, v1, c1[a0.w]
    mova a0.w, r0.x
    dp3 r2.z, v1, c2[a0.w]
    mad r1.xyz, r2, r0.z, r1
    mova a0.w, r0.x
    dp3 r2.x, v2, c0[a0.w]
    mova a0.w, r0.x
    dp3 r2.y, v2, c1[a0.w]
    mova a0.w, r0.x
    dp3 r2.z, v2, c2[a0.w]
    mad r0.xyz, r2, r0.z, r5
    mul r2.xyz, r0.yzxw, r1.zxyw
    mad oT3.xyz, r1.yzxw, r0.zxyw, -r2
    mov oT1.xyz, r1
    mov oT2.xyz, r0
    mov oT0.xy, v5

// approximately 152 instruction slots used
