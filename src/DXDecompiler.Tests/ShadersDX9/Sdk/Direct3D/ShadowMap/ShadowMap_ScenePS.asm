//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float g_fCosTheta;
//   sampler2D g_samScene;
//   sampler2D g_samShadow;
//   float4 g_vLightAmbient;
//   float3 g_vLightDir;
//   float3 g_vLightPos;
//   float4 g_vMaterial;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   g_vMaterial     c0       1
//   g_vLightPos     c1       1
//   g_vLightDir     c2       1
//   g_vLightAmbient c3       1
//   g_fCosTheta     c4       1
//   g_samScene      s0       1
//   g_samShadow     s1       1
//

    ps_2_0
    def c5, 512, 4.99999987e-005, -0.5, 0
    def c6, 0.501953125, 1, 1.00195313, 0.5
    def c7, 0.5, 1, -1, -0
    def c8, 0.501953125, 1.00195313, 0, 0
    dcl t0.xy
    dcl t1.xyz
    dcl t2.xyz
    dcl t3
    dcl_2d s0
    dcl_2d s1
    mul r0.xy, t3, c7.x
    rcp r0.z, t3.w
    mul r1.xy, r0.z, r0
    mad r0.xy, r0, r0.z, c7.x
    mad r0.xy, r0, c7.yzxw, -c7.wzyx
    mov r2.yz, c7
    mad r1.xy, r1, r2.yzxw, c5.wzyx
    add r3.xy, r1, c8
    add r4.xy, r1, c6.wzyx
    add r1.xy, r1, c6
    texld r3, r3, s1
    texld r1, r1, s1
    texld r4, r4, s1
    texld r5, r0, s1
    texld r6, t0, s0
    mad r0.w, t3.z, -r0.z, r3.x
    add r0.w, r0.w, c5.y
    cmp r0.w, r0.w, -c7.z, -c7.w
    mad r1.x, t3.z, -r0.z, r1.x
    add r1.x, r1.x, c5.y
    mad r1.y, t3.z, -r0.z, r4.x
    add r1.y, r1.y, c5.y
    cmp r1.z, r1.y, c7.z, c7.w
    cmp r1.xy, r1, -c7.z, -c7.w
    add r0.w, r0.w, r1.z
    mul r0.xy, r0, c5.x
    add r1.z, r5.x, c5.y
    mad r0.z, t3.z, -r0.z, r1.z
    frc r0.xy, r0
    mad r0.w, r0.x, r0.w, r1.y
    cmp r1.y, r0.z, c7.z, c7.w
    cmp r0.z, r0.z, -c7.z, -c7.w
    add r1.x, r1.y, r1.x
    mad r0.x, r0.x, r1.x, r0.z
    lrp r1.x, r0.y, r0.w, r0.x
    nrm r0.xyz, t2
    add r3.xyz, t1, -c1
    nrm r4.xyz, r3
    dp3_sat r4.w, -r4, r0
    dp3 r0.x, r4, c2
    add r0.x, -r0.x, c4.x
    mul r0.y, r1.x, r4.w
    lrp r1, r0.y, r2.y, c3
    mul r1, r1, c0
    mov r2, c3
    mul r2, r2, c0
    cmp r0, r0.x, r2, r1
    mul r0, r0, r6
    mov oC0, r0

// approximately 53 instruction slots used (5 texture, 48 arithmetic)
