//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for uav
// {
//
//   struct foo
//   {
//       
//       float4 sValue1;                // Offset:    0
//       float4 sValue2;                // Offset:   16
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// uav                                   UAV  struct     consume             u1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   x           0     NONE     int       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_uav_structured u1, 32
dcl_output o0.xyzw
dcl_temps 4
itof r0.xyzw, l(0, 0, 0, 0)
bufinfo_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r1.x, u1.xyzw
mov r1.x, r1.x
mov r1.y, l(32)
utof r2.xyzw, r1.xxxx
add r0.xyzw, r0.xyzw, r2.xyzw
utof r1.xyzw, r1.yyyy
add r0.xyzw, r0.xyzw, r1.xyzw
imm_atomic_consume r1.x, u1
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r2.x, r1.x, l(0), u1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r2.y, r1.x, l(4), u1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r2.z, r1.x, l(8), u1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r2.w, r1.x, l(12), u1.xxxx
mov r2.x, r2.x
mov r2.y, r2.y
mov r2.z, r2.z
add r0.xyzw, r0.xyzw, r2.xyzw
imm_atomic_consume r1.x, u1
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r2.x, r1.x, l(0), u1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r2.y, r1.x, l(4), u1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r2.z, r1.x, l(8), u1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r2.w, r1.x, l(12), u1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r3.x, r1.x, l(16), u1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r3.y, r1.x, l(20), u1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r3.z, r1.x, l(24), u1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r3.w, r1.x, l(28), u1.xxxx
mov r2.x, r2.x
mov r2.y, r2.y
mov r2.z, r2.z
mov r2.w, r2.w
mov r3.x, r3.x
mov r3.y, r3.y
mov r3.z, r3.z
add r0.xyzw, r0.xyzw, r2.xyzw
add r0.xyzw, r3.xyzw, r0.xyzw
mov o0.xyzw, r0.xyzw
ret 
// Approximately 37 instruction slots used
