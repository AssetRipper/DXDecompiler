//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Note: shader requires additional functionality:
//       64 UAV slots
//       PS Output Stencil Ref
//       PS Inner Coverage
//       Typed UAV Load Additional Formats
//       Raster Ordered UAVs
//
//
// Buffer Definitions: 
//
// Resource bind info for rov3
// {
//
//   struct foo
//   {
//       
//       float4 sValue1;                // Offset:    0
//       float4 sValue2;                // Offset:   16
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
// Resource bind info for uav3
// {
//
//   struct foo
//   {
//       
//       float4 sValue1;                // Offset:    0
//       float4 sValue2;                // Offset:   16
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// rov1                                  UAV  float4         buf      U0             u0      1 
// rov2                                  UAV    byte         r/w      U1             u1      1 
// rov3                                  UAV  struct         r/w      U2             u2      1 
// rov4                                  UAV  float4          1d      U3             u3      1 
// rov5                                  UAV  float4     1darray      U4             u4      1 
// rov6                                  UAV  float4          2d      U5             u5      1 
// rov7                                  UAV  float4     2darray      U6             u6      1 
// rov8                                  UAV  float4          3d      U7             u7      1 
// uav1                                  UAV  float4         buf      U8             u8      1 
// uav2                                  UAV    byte         r/w      U9             u9      1 
// uav3                                  UAV  struct         r/w     U10            u10      1 
// uav4                                  UAV  float4          1d     U11            u11      1 
// uav5                                  UAV  float4     1darray     U12            u12      1 
// uav6                                  UAV  float4          2d     U13            u13      1 
// uav7                                  UAV  float4     2darray     U14            u14      1 
// uav8                                  UAV  float4          3d     U15            u15      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   x           0     NONE     int   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_StencilRef            0    N/A    oStencilRef STENCILREF    uint    YES
//
ps_5_1
dcl_globalFlags refactoringAllowed
dcl_uav_typed_buffer_rov (float,float,float,float) U0[0:0], space=0
dcl_uav_raw_rov U1[1:1], space=0
dcl_uav_structured_rov U2[2:2], 32, space=0
dcl_uav_typed_texture1d_rov (float,float,float,float) U3[3:3], space=0
dcl_uav_typed_texture1darray_rov (float,float,float,float) U4[4:4], space=0
dcl_uav_typed_texture2d_rov (float,float,float,float) U5[5:5], space=0
dcl_uav_typed_texture2darray_rov (float,float,float,float) U6[6:6], space=0
dcl_uav_typed_texture3d_rov (float,float,float,float) U7[7:7], space=0
dcl_uav_typed_buffer (float,float,float,float) U8[8:8], space=0
dcl_uav_raw U9[9:9], space=0
dcl_uav_structured U10[10:10], 32, space=0
dcl_uav_typed_texture1d (float,float,float,float) U11[11:11], space=0
dcl_uav_typed_texture1darray (float,float,float,float) U12[12:12], space=0
dcl_uav_typed_texture2d (float,float,float,float) U13[13:13], space=0
dcl_uav_typed_texture2darray (float,float,float,float) U14[14:14], space=0
dcl_uav_typed_texture3d (float,float,float,float) U15[15:15], space=0
dcl_input_ps constant v0.x
dcl_input vInnerCoverage
dcl_output o0.xyzw
dcl_output oStencilRef
dcl_temps 2
ld_uav_typed r0.xyzw, v0.xxxx, U0[0].xyzw
ld_raw r1.x, v0.x, U1[1].xxxx
utof r1.x, r1.x
add r0.xyzw, r0.xyzw, r1.xxxx
ld_structured r1.xyzw, v0.x, l(16), U2[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U3[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U4[4].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U5[5].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U6[6].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U7[7].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U8[8].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_raw r1.x, v0.x, U9[9].xxxx
utof r1.x, r1.x
add r0.xyzw, r0.xyzw, r1.xxxx
ld_structured r1.xyzw, v0.x, l(16), U10[10].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U11[11].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U12[12].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U13[13].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U14[14].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_uav_typed r1.xyzw, v0.xxxx, U15[15].xyzw
add o0.xyzw, r0.xyzw, r1.xyzw
mov oStencilRef, vInnerCoverage.x
ret 
// Approximately 35 instruction slots used
