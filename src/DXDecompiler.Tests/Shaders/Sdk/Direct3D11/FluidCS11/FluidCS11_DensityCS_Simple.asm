//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbSimulationConstants
// {
//
//   uint g_iNumParticles;              // Offset:    0 Size:     4
//   float g_fTimeStep;                 // Offset:    4 Size:     4 [unused]
//   float g_fSmoothlen;                // Offset:    8 Size:     4
//   float g_fPressureStiffness;        // Offset:   12 Size:     4 [unused]
//   float g_fRestDensity;              // Offset:   16 Size:     4 [unused]
//   float g_fDensityCoef;              // Offset:   20 Size:     4
//   float g_fGradPressureCoef;         // Offset:   24 Size:     4 [unused]
//   float g_fLapViscosityCoef;         // Offset:   28 Size:     4 [unused]
//   float g_fWallStiffness;            // Offset:   32 Size:     4 [unused]
//   float4 g_vGravity;                 // Offset:   48 Size:    16 [unused]
//   float4 g_vGridDim;                 // Offset:   64 Size:    16 [unused]
//   float3 g_vPlanes[4];               // Offset:   80 Size:    60 [unused]
//
// }
//
// Resource bind info for ParticlesRO
// {
//
//   struct Particle
//   {
//       
//       float2 position;               // Offset:    0
//       float2 velocity;               // Offset:    8
//
//   } $Element;                        // Offset:    0 Size:    16
//
// }
//
// Resource bind info for ParticlesDensityRW
// {
//
//   struct ParticleDensity
//   {
//       
//       float density;                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ParticlesRO                       texture  struct         r/o             t0      1 
// ParticlesDensityRW                    UAV  struct         r/w             u0      1 
// cbSimulationConstants             cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_structured t0, 16
dcl_uav_structured u0, 4
dcl_input vThreadID.x
dcl_temps 2
dcl_thread_group 256, 1, 1
mul r0.x, cb0[0].z, cb0[0].z
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r0.yz, vThreadID.x, l(0), t0.xxyx
mov r0.w, l(0)
mov r1.x, l(0)
loop 
  uge r1.y, r1.x, cb0[0].x
  breakc_nz r1.y
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.yz, r1.x, l(0), t0.xxyx
  add r1.yz, -r0.yyzy, r1.yyzy
  dp2 r1.y, r1.yzyy, r1.yzyy
  lt r1.z, r1.y, r0.x
  mad r1.y, cb0[0].z, cb0[0].z, -r1.y
  mul r1.w, r1.y, r1.y
  mul r1.w, r1.w, cb0[1].y
  mad r1.y, r1.w, r1.y, r0.w
  movc r0.w, r1.z, r1.y, r0.w
  iadd r1.x, r1.x, l(1)
endloop 
store_structured u0.x, vThreadID.x, l(0), r0.w
ret 
// Approximately 20 instruction slots used
