//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for ParticlesRO
// {
//
//   struct Particle
//   {
//       
//       float2 position;               // Offset:    0
//       float2 velocity;               // Offset:    8
//
//   } $Element;                        // Offset:    0 Size:    16
//
// }
//
// Resource bind info for ParticleDensityRO
// {
//
//   struct ParticleDensity
//   {
//       
//       float density;                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ParticlesRO                       texture  struct         r/o             t0      1 
// ParticleDensityRO                 texture  struct         r/o             t1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xy          0     NONE   float   xy  
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 1.000000},
                              { 1.000000, 1.000000, 0, 1.000000},
                              { 0, 1.000000, 0, 1.000000},
                              { 0, 1.000000, 1.000000, 1.000000},
                              { 0, 0, 1.000000, 1.000000} }
dcl_resource_structured t0, 16
dcl_resource_structured t1, 4
dcl_input_sgv v0.x, vertex_id
dcl_output o0.xy
dcl_output o1.xyzw
dcl_temps 3
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) o0.xy, v0.x, l(0), t0.xyxx
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.x, v0.x, l(0), t1.xxxx
add r0.x, r0.x, l(-1000.000000)
mul_sat r0.x, r0.x, l(0.001000)
mul r0.x, r0.x, l(4.000000)
round_pi r0.y, r0.x
ftou r0.y, r0.y
mov r1.xyz, icb[r0.y + 0].xyzx
round_ni r0.y, r0.x
frc r0.x, r0.x
ftou r0.y, r0.y
mov r2.xyz, icb[r0.y + 0].xyzx
mov r1.w, l(1.000000)
mov r2.w, l(1.000000)
add r1.xyzw, r1.xyzw, -r2.xyzw
mad o1.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
ret 
// Approximately 17 instruction slots used
