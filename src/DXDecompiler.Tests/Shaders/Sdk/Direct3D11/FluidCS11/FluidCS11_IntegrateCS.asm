//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbSimulationConstants
// {
//
//   uint g_iNumParticles;              // Offset:    0 Size:     4 [unused]
//   float g_fTimeStep;                 // Offset:    4 Size:     4
//   float g_fSmoothlen;                // Offset:    8 Size:     4 [unused]
//   float g_fPressureStiffness;        // Offset:   12 Size:     4 [unused]
//   float g_fRestDensity;              // Offset:   16 Size:     4 [unused]
//   float g_fDensityCoef;              // Offset:   20 Size:     4 [unused]
//   float g_fGradPressureCoef;         // Offset:   24 Size:     4 [unused]
//   float g_fLapViscosityCoef;         // Offset:   28 Size:     4 [unused]
//   float g_fWallStiffness;            // Offset:   32 Size:     4
//   float4 g_vGravity;                 // Offset:   48 Size:    16
//   float4 g_vGridDim;                 // Offset:   64 Size:    16 [unused]
//   float3 g_vPlanes[4];               // Offset:   80 Size:    60
//
// }
//
// Resource bind info for ParticlesRO
// {
//
//   struct Particle
//   {
//       
//       float2 position;               // Offset:    0
//       float2 velocity;               // Offset:    8
//
//   } $Element;                        // Offset:    0 Size:    16
//
// }
//
// Resource bind info for ParticlesForcesRO
// {
//
//   struct ParticleForces
//   {
//       
//       float2 acceleration;           // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for ParticlesRW
// {
//
//   struct Particle
//   {
//       
//       float2 position;               // Offset:    0
//       float2 velocity;               // Offset:    8
//
//   } $Element;                        // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ParticlesRO                       texture  struct         r/o             t0      1 
// ParticlesForcesRO                 texture  struct         r/o             t2      1 
// ParticlesRW                           UAV  struct         r/w             u0      1 
// cbSimulationConstants             cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[9], immediateIndexed
dcl_resource_structured t0, 16
dcl_resource_structured t2, 8
dcl_uav_structured u0, 16
dcl_input vThreadID.x
dcl_temps 3
dcl_thread_group 256, 1, 1
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, vThreadID.x, l(0), t2.xyxx
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.xyzw, vThreadID.x, l(0), t0.xyzw
mov r2.xy, r1.xyxx
mov r2.z, l(1.000000)
dp3 r0.z, r2.xyzx, cb0[5].xyzx
min r0.z, r0.z, l(0.000000)
mul r0.z, r0.z, -cb0[2].x
mad r0.xy, r0.zzzz, cb0[5].xyxx, r0.xyxx
dp3 r0.z, r2.xyzx, cb0[6].xyzx
min r0.z, r0.z, l(0.000000)
mul r0.z, r0.z, -cb0[2].x
mad r0.xy, r0.zzzz, cb0[6].xyxx, r0.xyxx
dp3 r0.z, r2.xyzx, cb0[7].xyzx
dp3 r0.w, r2.xyzx, cb0[8].xyzx
min r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.zw, r0.zzzw, -cb0[2].xxxx
mad r0.xy, r0.zzzz, cb0[7].xyxx, r0.xyxx
mad r0.xy, r0.wwww, cb0[8].xyxx, r0.xyxx
add r0.xy, r0.xyxx, cb0[3].xyxx
mad r0.zw, cb0[0].yyyy, r0.xxxy, r1.zzzw
mad r0.xy, cb0[0].yyyy, r0.zwzz, r2.xyxx
store_structured u0.xyzw, vThreadID.x, l(0), r0.xyzw
ret 
// Approximately 23 instruction slots used
