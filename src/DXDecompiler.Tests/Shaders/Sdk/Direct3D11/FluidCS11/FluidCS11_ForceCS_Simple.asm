//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbSimulationConstants
// {
//
//   uint g_iNumParticles;              // Offset:    0 Size:     4
//   float g_fTimeStep;                 // Offset:    4 Size:     4 [unused]
//   float g_fSmoothlen;                // Offset:    8 Size:     4
//   float g_fPressureStiffness;        // Offset:   12 Size:     4
//   float g_fRestDensity;              // Offset:   16 Size:     4
//   float g_fDensityCoef;              // Offset:   20 Size:     4 [unused]
//   float g_fGradPressureCoef;         // Offset:   24 Size:     4
//   float g_fLapViscosityCoef;         // Offset:   28 Size:     4
//   float g_fWallStiffness;            // Offset:   32 Size:     4 [unused]
//   float4 g_vGravity;                 // Offset:   48 Size:    16 [unused]
//   float4 g_vGridDim;                 // Offset:   64 Size:    16 [unused]
//   float3 g_vPlanes[4];               // Offset:   80 Size:    60 [unused]
//
// }
//
// Resource bind info for ParticlesRO
// {
//
//   struct Particle
//   {
//       
//       float2 position;               // Offset:    0
//       float2 velocity;               // Offset:    8
//
//   } $Element;                        // Offset:    0 Size:    16
//
// }
//
// Resource bind info for ParticlesDensityRO
// {
//
//   struct ParticleDensity
//   {
//       
//       float density;                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     4
//
// }
//
// Resource bind info for ParticlesForcesRW
// {
//
//   struct ParticleForces
//   {
//       
//       float2 acceleration;           // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ParticlesRO                       texture  struct         r/o             t0      1 
// ParticlesDensityRO                texture  struct         r/o             t1      1 
// ParticlesForcesRW                     UAV  struct         r/w             u0      1 
// cbSimulationConstants             cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_structured t0, 16
dcl_resource_structured t1, 4
dcl_uav_structured u0, 8
dcl_input vThreadID.x
dcl_temps 5
dcl_thread_group 256, 1, 1
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(0), t0.xyzw
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r1.x, vThreadID.x, l(0), t1.xxxx
div r1.y, r1.x, cb0[1].x
mul r1.z, r1.y, r1.y
mad r1.y, r1.y, r1.z, l(-1.000000)
max r1.y, r1.y, l(0.000000)
mul r1.y, r1.y, cb0[0].w
mul r1.z, cb0[0].z, cb0[0].z
mov r2.xy, l(0,0,0,0)
mov r1.w, l(0)
loop 
  uge r2.z, r1.w, cb0[0].x
  breakc_nz r2.z
  ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r3.xyzw, r1.w, l(0), t0.xyzw
  add r3.xyzw, -r0.xyzw, r3.xyzw
  dp2 r2.z, r3.xyxx, r3.xyxx
  lt r2.w, r2.z, r1.z
  ine r4.x, r1.w, vThreadID.x
  and r2.w, r2.w, r4.x
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r4.x, r1.w, l(0), t1.xxxx
  div r4.y, r4.x, cb0[1].x
  mul r4.z, r4.y, r4.y
  mad r4.y, r4.y, r4.z, l(-1.000000)
  max r4.y, r4.y, l(0.000000)
  sqrt r2.z, r2.z
  mad r4.y, cb0[0].w, r4.y, r1.y
  mul r4.y, r4.y, cb0[1].z
  mul r4.y, r4.y, l(0.500000)
  div r4.y, r4.y, r4.x
  add r4.z, -r2.z, cb0[0].z
  mul r4.w, r4.z, r4.z
  mul r4.y, r4.y, r4.w
  div r2.z, r4.y, r2.z
  mad r3.xy, r2.zzzz, r3.xyxx, r2.xyxx
  div r2.z, cb0[1].w, r4.x
  mul r2.z, r4.z, r2.z
  mad r3.xy, r2.zzzz, r3.zwzz, r3.xyxx
  movc r2.xy, r2.wwww, r3.xyxx, r2.xyxx
  iadd r1.w, r1.w, l(1)
endloop 
div r0.xy, r2.xyxx, r1.xxxx
store_structured u0.xy, vThreadID.x, l(0), r0.xyxx
ret 
// Approximately 43 instruction slots used
