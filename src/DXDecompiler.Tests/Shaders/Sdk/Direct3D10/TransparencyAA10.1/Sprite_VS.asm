//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbChangeOnResize
// {
//
//   float g_fViewportHeight;           // Offset:    0 Size:     4
//   float g_fViewportWidth;            // Offset:    4 Size:     4
//   float g_fStartPosX;                // Offset:    8 Size:     4
//   float g_fStartPosY;                // Offset:   12 Size:     4
//   float g_fWidth;                    // Offset:   16 Size:     4
//   float g_fHeight;                   // Offset:   20 Size:     4
//   float g_fTextureWidth;             // Offset:   24 Size:     4 [unused]
//   float g_fTextureHeight;            // Offset:   28 Size:     4 [unused]
//   float g_fDepthRangeMin;            // Offset:   32 Size:     4 [unused]
//   float g_fDepthRangeMax;            // Offset:   36 Size:     4 [unused]
//   int g_nSampleIndex;                // Offset:   40 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cbChangeOnResize                  cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXTURE                  0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXTURE                  0   xy          1     NONE   float   xy  
//
vs_4_0
dcl_constantbuffer CB0[2], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 1
mad r0.xy, cb0[1].xyxx, v0.xyxx, cb0[0].zwzz
mul r0.zw, cb0[0].yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
div r0.xy, r0.xyxx, r0.zwzz
mad o0.xy, r0.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov o0.z, v0.z
mov o0.w, l(1.000000)
mov o1.xy, v1.xyxx
ret 
// Approximately 8 instruction slots used
