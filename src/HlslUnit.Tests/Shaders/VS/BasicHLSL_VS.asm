//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//
///
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 g_MaterialAmbientColor;     // Offset:    0 Size:    16
//   float4 g_MaterialDiffuseColor;     // Offset:   16 Size:    16
//   int g_nNumLights;                  // Offset:   32 Size:     4 [unused]
//   float3 g_LightDir;                 // Offset:   36 Size:    12
//   float4 g_LightDiffuse;             // Offset:   48 Size:    16
//   float4 g_LightAmbient;             // Offset:   64 Size:    16
//   float g_fTime;                     // Offset:   80 Size:     4 [unused]
//   float4x4 g_mWorld;                 // Offset:   96 Size:    64
//   float4x4 g_mWorldViewProjection;   // Offset:  160 Size:    64
//
// }
//
// cbuffer $Params
// {
//
//   int nNumLights;                    // Offset:    0 Size:     4
//   bool bTexture;                     // Offset:    4 Size:     4
//   bool bAnimate;                     // Offset:    8 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
// $Params                           cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
vs_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_temps 2
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 o0.x, r0.xyzw, cb0[10].xyzw
dp4 o0.y, r0.xyzw, cb0[11].xyzw
dp4 o0.z, r0.xyzw, cb0[12].xyzw
dp4 o0.w, r0.xyzw, cb0[13].xyzw
dp3 r0.x, v1.xyzx, cb0[6].xyzx
dp3 r0.y, v1.xyzx, cb0[7].xyzx
dp3 r0.z, v1.xyzx, cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.x, r0.xyzx, cb0[2].yzwy
max r0.x, r0.x, l(0.000000)
mov r0.yzw, l(0,0,0,0)
mov r1.x, l(0)
loop 
  ige r1.y, r1.x, cb1[0].x
  breakc_nz r1.y
  mad r0.yzw, cb0[3].xxyz, r0.xxxx, r0.yyzw
  iadd r1.x, r1.x, l(1)
endloop 
mul r1.xyz, cb0[0].xyzx, cb0[4].xyzx
mad o1.xyz, cb0[1].xyzx, r0.yzwy, r1.xyzx
movc o2.xy, cb1[0].yyyy, v2.xyxx, l(0,0,0,0)
mov o1.w, l(1.000000)
ret 
// Approximately 27 instruction slots used
