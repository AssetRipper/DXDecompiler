//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   bool $bTexture;
//   sampler2D AlbedoSampler;
//   float4 BLight[9];
//   samplerCUBE CLinBFSampler;
//   samplerCUBE CubeBFASampler;
//   samplerCUBE CubeBFBSampler;
//   float4 GLight[9];
//   samplerCUBE QuadBFSampler;
//   samplerCUBE QuarBFASampler;
//   samplerCUBE QuarBFBSampler;
//   samplerCUBE QuarBFCSampler;
//   samplerCUBE QuinBFASampler;
//   samplerCUBE QuinBFBSampler;
//   float4 RLight[9];
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $bTexture      b0       1
//   RLight         c0       9
//   GLight         c9       9
//   BLight         c18      9
//   AlbedoSampler  s0       1
//   CLinBFSampler  s1       1
//   QuadBFSampler  s2       1
//   CubeBFASampler s3       1
//   CubeBFBSampler s4       1
//   QuarBFASampler s5       1
//   QuarBFBSampler s6       1
//   QuarBFCSampler s7       1
//   QuinBFASampler s8       1
//   QuinBFBSampler s9       1
//

    ps_3_0
    def c27, 1, 0, 0, 0
    dcl_texcoord v0.xyz
    dcl_texcoord1 v1.xy
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4 v4
    dcl_texcoord5 v5
    dcl_texcoord6 v6.xy
    dcl_2d s0
    dcl_cube s1
    dcl_cube s2
    dcl_cube s3
    dcl_cube s4
    dcl_cube s5
    dcl_cube s6
    dcl_cube s7
    dcl_cube s8
    dcl_cube s9
    texld r0, v0, s1
    mul r1, r0, v2.xyyy
    dp4 r1.x, r1, c0
    mul r2, r0, v3.xyyy
    dp4 r1.y, r2, c9
    mul r0, r0, v4.xyyy
    dp4 r0.x, r0, c18
    texld r2, v0, s2
    texld r3, v0, s3
    texld r4, v0, s4
    mul r5, r2, v2.z
    dp4 r0.y, r5, c1
    mul r5, r2, v3.z
    dp4 r0.z, r5, c10
    add r0.yz, r0, r1.xxyw
    mul r1, r2, v4.z
    dp4 r0.w, r1, c19
    add r0.x, r0.w, r0.x
    mul r1, r3, v2.zwww
    dp4 r0.w, r1, c2
    add r0.y, r0.w, r0.y
    mul r1, r3, v3.zwww
    dp4 r0.w, r1, c11
    add r0.z, r0.w, r0.z
    dp4 r0.w, r1, c20
    add r0.x, r0.w, r0.x
    mul r1, r4, v2.w
    dp4 r0.w, r1, c3
    add r0.y, r0.w, r0.y
    mul r1, r4, v3.w
    dp4 r0.w, r1, c12
    add r0.z, r0.w, r0.z
    mul r1, r4, v4.w
    dp4 r0.w, r1, c21
    add r0.x, r0.w, r0.x
    texld r1, v0, s5
    texld r2, v0, s6
    texld r3, v0, s7
    texld r4, v0, s8
    texld r5, v0, s9
    mul r6, r1, v5.x
    dp4 r0.w, r6, c4
    add r0.y, r0.w, r0.y
    mul r6, r1, v5.z
    dp4 r0.w, r6, c13
    add r0.z, r0.w, r0.z
    mul r1, r1, v6.x
    dp4 r0.w, r1, c22
    add r0.x, r0.w, r0.x
    mul r1, r2, v5.x
    dp4 r0.w, r1, c5
    add r0.y, r0.w, r0.y
    mul r1, r2, v5.z
    dp4 r0.w, r1, c23
    add r0.z, r0.w, r0.z
    mul r1, r2, v6.x
    dp4 r0.w, r1, c23
    add r0.x, r0.w, r0.x
    mul r1, r3, v5.xyyy
    dp4 r0.w, r1, c6
    add r0.y, r0.w, r0.y
    mul r1, r3, v5.zwww
    dp4 r0.w, r1, c24
    add r0.z, r0.w, r0.z
    mul r1, r3, v6.xyyy
    dp4 r0.w, r1, c24
    add r0.x, r0.w, r0.x
    mul r1, r4, v5.y
    dp4 r0.w, r1, c7
    add r0.y, r0.w, r0.y
    mul r1, r4, v5.w
    dp4 r0.w, r1, c25
    add r0.z, r0.w, r0.z
    mul r1, r4, v6.y
    dp4 r0.w, r1, c25
    add r0.x, r0.w, r0.x
    mul r1, r5, v5.y
    dp4 r0.w, r1, c8
    add r1.x, r0.w, r0.y
    mul r2, r5, v5.w
    dp4 r0.y, r2, c17
    add r1.y, r0.y, r0.z
    mul r2, r5, v6.y
    dp4 r0.y, r2, c26
    add r1.z, r0.y, r0.x
    if b0
      texld r0, v1, s0
      mov r1.w, c27.x
      mul oC0, r0, r1
    else
      mov oC0.xyz, r1
      mov oC0.w, c27.x
    endif

// approximately 95 instruction slots used (10 texture, 85 arithmetic)
