//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Note: shader requires additional functionality:
//       Tiled resources
//
//
// Buffer Definitions: 
//
// Resource bind info for tex9
// {
//
//   struct foo
//   {
//       
//       float4 sValue1;                // Offset:    0
//       float4 sValue2;                // Offset:   16
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// tex0                              texture  float4         buf             t0      1 
// tex1                              texture  float4          1d             t1      1 
// tex2                              texture  float4     1darray             t2      1 
// tex3                              texture  float4          2d             t3      1 
// tex4                              texture  float4     2darray             t4      1 
// tex5                              texture  float4          3d             t5      1 
// tex6                              texture  float4        cube             t6      1 
// tex7                              texture  float4   cubearray             t7      1 
// tex8                              texture    byte         r/o             t8      1 
// tex9                              texture  struct         r/o             t9      1 
// tex10                             texture   float       2dMS4            t10      1 
// tex11                             texture   float  2darrayMS4            t11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   x           0     NONE     int   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_texture1d (float,float,float,float) t1
dcl_resource_texture1darray (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2darray (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecubearray (float,float,float,float) t7
dcl_resource_raw t8
dcl_resource_structured t9, 32
dcl_resource_texture2dms(4) (float,float,float,float) t10
dcl_resource_texture2dmsarray(4) (float,float,float,float) t11
dcl_input_ps constant v0.x
dcl_output o0.xyzw
dcl_temps 5
ld_indexable(buffer)(float,float,float,float) r0.xyzw, v0.xxxx, t0.xyzw
ld_indexable(texture1d)(float,float,float,float) r1.xyzw, v0.xxxx, t1.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
ld_indexable(texture1darray)(float,float,float,float) r1.xyzw, v0.xxxx, t2.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
itof r1.x, v0.x
sample_cl_s_indexable(texture2d)(float,float,float,float) r2.xyzw, r3.x, r1.xxxx, t3.xyzw, s0, l(0.000000)
add r0.xyzw, r0.xyzw, r2.xyzw
check_access_fully_mapped r1.y, r3.x
movc r1.y, r1.y, l(1.000000), l(0)
add r0.xyzw, r0.xyzw, r1.yyyy
sample_cl_s_indexable(texture2darray)(float,float,float,float) r2.xyzw, r3.x, r1.xxxx, t4.xyzw, s0, l(0.000000)
add r0.xyzw, r0.xyzw, r2.xyzw
check_access_fully_mapped r1.y, r3.x
movc r1.y, r1.y, l(1.000000), l(0)
add r0.xyzw, r0.xyzw, r1.yyyy
sample_cl_s_indexable(texture3d)(float,float,float,float) r2.xyzw, r3.x, r1.xxxx, t5.xyzw, s0, l(0.000000)
add r0.xyzw, r0.xyzw, r2.xyzw
check_access_fully_mapped r1.y, r3.x
movc r1.y, r1.y, l(1.000000), l(0)
add r0.xyzw, r0.xyzw, r1.yyyy
sample_cl_s_indexable(texturecube)(float,float,float,float) r2.xyzw, r3.x, r1.xxxx, t6.xyzw, s0, l(0.000000)
sample_cl_s_indexable(texturecubearray)(float,float,float,float) r1.xyzw, r4.x, r1.xxxx, t7.xyzw, s0, l(0.000000)
add r0.xyzw, r0.xyzw, r2.xyzw
check_access_fully_mapped r2.x, r3.x
movc r2.x, r2.x, l(1.000000), l(0)
add r0.xyzw, r0.xyzw, r2.xxxx
add r0.xyzw, r1.xyzw, r0.xyzw
check_access_fully_mapped r1.x, r4.x
movc r1.x, r1.x, l(1.000000), l(0)
add r0.xyzw, r0.xyzw, r1.xxxx
ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r1.x, v0.x, t8.xxxx
utof r1.x, r1.x
add r0.xyzw, r0.xyzw, r1.xxxx
ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r1.xyzw, v0.x, l(16), t9.xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mov r1.x, v0.x
mov r1.z, l(0)
ldms_indexable(texture2dms)(float,float,float,float) r1.y, r1.xxzz, t10.yxzw, v0.x
ldms_indexable(texture2dmsarray)(float,float,float,float) r1.x, r1.xxxz, t11.xyzw, v0.x
add r0.xyzw, r0.xyzw, r1.yyyy
add o0.xyzw, r1.xxxx, r0.xyzw
ret 
// Approximately 43 instruction slots used
