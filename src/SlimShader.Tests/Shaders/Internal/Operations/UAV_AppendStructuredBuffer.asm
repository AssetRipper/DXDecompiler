//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for uav
// {
//
//   struct foo
//   {
//       
//       float4 sValue1;                // Offset:    0
//       float4 sValue2;                // Offset:   16
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// uav                                   UAV  struct      append             u1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   x           0     NONE     int   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_uav_structured u1, 32
dcl_input_ps constant v0.x
dcl_output o0.xyzw
dcl_temps 5
itof r0.xyzw, l(0, 0, 0, 0)
itof r1.xyzw, v0.xxxx
itof r2.xyzw, v0.xxxx
bufinfo_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r3.x, u1.xyzw
mov r3.x, r3.x
mov r3.y, l(32)
utof r4.xyzw, r3.xxxx
add r0.xyzw, r0.xyzw, r4.xyzw
utof r3.xyzw, r3.yyyy
add r0.xyzw, r0.xyzw, r3.xyzw
imm_atomic_alloc r3.x, u1
store_structured u1.x, r3.x, l(0), r1.x
store_structured u1.x, r3.x, l(4), r1.y
store_structured u1.x, r3.x, l(8), r1.z
store_structured u1.x, r3.x, l(12), r1.w
store_structured u1.x, r3.x, l(16), r2.x
store_structured u1.x, r3.x, l(20), r2.y
store_structured u1.x, r3.x, l(24), r2.z
store_structured u1.x, r3.x, l(28), r2.w
mov o0.xyzw, r0.xyzw
ret 
// Approximately 21 instruction slots used
