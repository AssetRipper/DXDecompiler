//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CB
// {
//
//   uint g_iLevel;                     // Offset:    0 Size:     4 [unused]
//   uint g_iLevelMask;                 // Offset:    4 Size:     4 [unused]
//   uint g_iWidth;                     // Offset:    8 Size:     4
//   uint g_iHeight;                    // Offset:   12 Size:     4
//
// }
//
// Resource bind info for Input
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for Data
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Input                             texture  struct         r/o             t0      1 
// Data                                  UAV  struct         r/w             u0      1 
// CB                                cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_resource_structured t0, 4
dcl_uav_structured u0, 4
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadIDInGroup.xy
dcl_input vThreadID.xy
dcl_temps 1
dcl_tgsm_structured g0, 4, 256
dcl_thread_group 16, 16, 1
imad r0.x, vThreadID.y, cb0[0].z, vThreadID.x
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.x, r0.x, l(0), t0.xxxx
store_structured g0.x, vThreadIDInGroupFlattened.x, l(0), r0.x
sync_g_t
imad r0.x, vThreadIDInGroup.x, l(16), vThreadIDInGroup.y
ld_structured r0.x, r0.x, l(0), g0.xxxx
iadd r0.yz, -vThreadIDInGroup.yyxy, vThreadID.yyxy
iadd r0.yz, r0.yyzy, vThreadIDInGroup.xxyx
imad r0.y, r0.z, cb0[0].w, r0.y
store_structured u0.x, r0.y, l(0), r0.x
ret 
// Approximately 11 instruction slots used
