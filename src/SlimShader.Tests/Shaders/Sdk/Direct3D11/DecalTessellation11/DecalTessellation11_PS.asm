//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbInit
// {
//
//   float4 g_vMaterialColor;           // Offset:    0 Size:    16
//   float4 g_vAmbientColor;            // Offset:   16 Size:    16
//   float4 g_vSpecularColor;           // Offset:   32 Size:    16
//   float4 g_vScreenSize;              // Offset:   48 Size:    16 [unused]
//   float4 g_vFlags;                   // Offset:   64 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// g_sampleLinear                    sampler      NA          NA             s0      1 
// g_NormalMap                       texture  float4          2d             t1      1 
// g_BaseMap                         texture  float4          2d             t2      1 
// cbInit                            cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// LIGHTVECTORTS            0   xyz         4     NONE   float   xyz 
// LIGHTVECTORWS            0   xyz         5     NONE   float   xyz 
// VIEWVECTORTS             0   xyz         6     NONE   float   xyz 
// VIEWVECTORWS             0   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 4
lt r0.x, v3.z, l(1.000000)
if_nz r0.x
  dp3 r0.x, v2.xyzx, v2.xyzx
  rsq r0.x, r0.x
  mul r0.xyz, r0.xxxx, v2.xyzx
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r0.w, r0.w
  mul r1.xyz, r0.wwww, v5.xyzx
  dp3 r0.w, v7.xyzx, v7.xyzx
  rsq r0.w, r0.w
  mul r2.xyz, r0.wwww, v7.xyzx
else 
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, v3.xyxx, t1.xyzw, s0
  mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  dp3 r0.w, r3.xyzx, r3.xyzx
  rsq r0.w, r0.w
  mul r0.xyz, r0.wwww, r3.xyzx
  dp3 r0.w, v4.xyzx, v4.xyzx
  rsq r0.w, r0.w
  mul r1.xyz, r0.wwww, v4.xyzx
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r0.w, r0.w
  mul r2.xyz, r0.wwww, v6.xyzx
endif 
lt r0.w, l(0.000000), cb0[4].x
if_nz r0.w
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t2.xyzw, s0
  mul r3.xyz, r3.xyzx, cb0[0].xyzx
else 
  mov r3.xyz, cb0[0].xyzx
endif 
dp3_sat r0.w, r0.xyzx, r1.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3_sat r0.x, r0.xyzx, r1.xyzx
log r0.x, r0.x
mul r0.x, r0.x, l(100.000000)
exp r0.x, r0.x
mov r3.w, cb0[0].w
mul r1.xyzw, r3.xyzw, cb0[1].xyzw
mad r1.xyzw, r3.xyzw, r0.wwww, r1.xyzw
mad o0.xyzw, cb0[2].xyzw, r0.xxxx, r1.xyzw
ret 
// Approximately 45 instruction slots used
