//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   float4x4 g_mViewProjection;        // Offset:    0 Size:    64 [unused]
//   float3 g_vCameraPosWorld;          // Offset:   64 Size:    12
//   float g_fTessellationFactor;       // Offset:   76 Size:     4 [unused]
//   float g_fDisplacementHeight;       // Offset:   80 Size:     4 [unused]
//   float3 g_vSolidColor;              // Offset:   84 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// g_samLinear                       sampler      NA          NA             s0      1 
// g_txHeight                        texture  float4          2d             t0      1 
// g_txDiffuse                       texture  float4          2d             t1      1 
// g_txSpecular                      texture  float4          2d             t2      1 
// cbPerFrame                        cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TANGENT                  0   xyz         3     NONE   float   xyz 
// BITANGENT                0   xyz         4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.701513, -0.642805, 0.307705, 0},
                              { 0.379523, -0.279064, 0.882092, 0},
                              { 0.447078, -0.501002, -0.741025, 0},
                              { -0.543092, 0.424649, -0.724379, 0},
                              { 1.000000, 0.922507, 0.464911, 0},
                              { 0.169253, 0.375913, 1.000000, 0},
                              { 1.000000, 0.721300, 0.147527, 0},
                              { 0.136899, 0.361867, 1.000000, 0} }
dcl_constantbuffer CB2[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 6
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v2.xyxx, t0.xyzw, s0
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r0.xyz, r0.xyzx, l(1.500000, 1.500000, 1.000000, 0.000000)
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v1.xyzx, v1.xyzx
rsq r1.x, r0.w
mul r1.xyz, r1.xxxx, v1.xyzx
ge r0.w, l(0.000000), r0.w
movc r1.xyz, r0.wwww, v1.xyzx, r1.xyzx
dp3 r0.w, v3.xyzx, v3.xyzx
rsq r1.w, r0.w
mul r2.xyz, r1.wwww, v3.xyzx
ge r0.w, l(0.000000), r0.w
movc r2.xyz, r0.wwww, v3.xyzx, r2.xyzx
mul r2.xyz, r0.xxxx, r2.xyzx
mad r0.xzw, r1.xxyz, r0.zzzz, r2.xxyz
dp3 r1.x, v4.xyzx, v4.xyzx
rsq r1.y, r1.x
mul r1.yzw, r1.yyyy, v4.xxyz
ge r1.x, l(0.000000), r1.x
movc r1.xyz, r1.xxxx, v4.xyzx, r1.yzwy
mad r0.xyz, r1.xyzx, r0.yyyy, r0.xzwx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.xyxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t2.yzwx, s0
mul r0.w, r0.w, l(0.600000)
add r2.xyz, -v0.xyzx, cb2[4].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mov r3.xyz, l(0,0,0,0)
mov r2.w, l(0)
loop 
  ige r3.w, r2.w, l(4)
  breakc_nz r3.w
  dp3_sat r3.w, r0.xyzx, -icb[r2.w + 0].xyzx
  mul r3.w, r3.w, r3.w
  mad r4.xyz, r2.xyzx, r1.wwww, -icb[r2.w + 0].xyzx
  dp3 r4.w, r4.xyzx, r4.xyzx
  rsq r4.w, r4.w
  mul r4.xyz, r4.wwww, r4.xyzx
  dp3_sat r4.x, r4.xyzx, r0.xyzx
  log r4.x, r4.x
  mul r4.x, r4.x, l(32.000000)
  exp r4.x, r4.x
  mul r4.yzw, r1.xxyz, icb[r2.w + 4].xxyz
  mad r4.yzw, r4.yyzw, r3.wwww, r3.xxyz
  mul r5.xyz, r4.xxxx, icb[r2.w + 4].xyzx
  mad r3.xyz, r5.xyzx, r0.wwww, r4.yzwy
  iadd r2.w, r2.w, l(1)
endloop 
mov o0.xyz, r3.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 54 instruction slots used
