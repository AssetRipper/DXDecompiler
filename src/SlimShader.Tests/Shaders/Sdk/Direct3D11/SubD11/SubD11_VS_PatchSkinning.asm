//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPerMesh
// {
//
//   float4x4 g_mConstBoneWorld[80];    // Offset:    0 Size:  5120
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cbPerMesh                         cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TANGENT                  0   xyz         2     NONE   float   xyz 
// BONES                    0   xyzw        3     NONE    uint   xyzw
// WEIGHTS                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// WORLDPOS                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TANGENT                  0   xyz         2     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[319], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output o0.xyz
dcl_output o1.xy
dcl_output o2.xyz
dcl_temps 4
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
ishl r1.xyzw, v3.xyzw, l(2, 2, 2, 2)
dp4 r2.x, r0.xyzw, cb1[r1.y + 0].xyzw
dp4 r2.y, r0.xyzw, cb1[r1.y + 1].xyzw
dp4 r2.z, r0.xyzw, cb1[r1.y + 2].xyzw
mul r2.xyz, r2.xyzx, v4.yyyy
dp4 r3.x, r0.xyzw, cb1[r1.x + 0].xyzw
dp4 r3.y, r0.xyzw, cb1[r1.x + 1].xyzw
dp4 r3.z, r0.xyzw, cb1[r1.x + 2].xyzw
mad r2.xyz, r3.xyzx, v4.xxxx, r2.xyzx
dp4 r3.x, r0.xyzw, cb1[r1.z + 0].xyzw
dp4 r3.y, r0.xyzw, cb1[r1.z + 1].xyzw
dp4 r3.z, r0.xyzw, cb1[r1.z + 2].xyzw
mad r2.xyz, r3.xyzx, v4.zzzz, r2.xyzx
dp4 r3.x, r0.xyzw, cb1[r1.w + 0].xyzw
dp4 r3.y, r0.xyzw, cb1[r1.w + 1].xyzw
dp4 r3.z, r0.xyzw, cb1[r1.w + 2].xyzw
mad o0.xyz, r3.xyzx, v4.wwww, r2.xyzx
mov o1.xy, v1.xyxx
dp3 r0.x, v2.xyzx, cb1[r1.y + 0].xyzx
dp3 r0.y, v2.xyzx, cb1[r1.y + 1].xyzx
dp3 r0.z, v2.xyzx, cb1[r1.y + 2].xyzx
mul r0.xyz, r0.xyzx, v4.yyyy
dp3 r2.x, v2.xyzx, cb1[r1.x + 0].xyzx
dp3 r2.y, v2.xyzx, cb1[r1.x + 1].xyzx
dp3 r2.z, v2.xyzx, cb1[r1.x + 2].xyzx
mad r0.xyz, r2.xyzx, v4.xxxx, r0.xyzx
dp3 r2.x, v2.xyzx, cb1[r1.z + 0].xyzx
dp3 r2.y, v2.xyzx, cb1[r1.z + 1].xyzx
dp3 r2.z, v2.xyzx, cb1[r1.z + 2].xyzx
mad r0.xyz, r2.xyzx, v4.zzzz, r0.xyzx
dp3 r1.x, v2.xyzx, cb1[r1.w + 0].xyzx
dp3 r1.y, v2.xyzx, cb1[r1.w + 1].xyzx
dp3 r1.z, v2.xyzx, cb1[r1.w + 2].xyzx
mad o2.xyz, r1.xyzx, v4.wwww, r0.xyzx
ret 
// Approximately 37 instruction slots used
