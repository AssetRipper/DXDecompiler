//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPerFrame
// {
//
//   float4x4 g_mViewProjection;        // Offset:    0 Size:    64
//   float3 g_vCameraPosWorld;          // Offset:   64 Size:    12 [unused]
//   float g_fTessellationFactor;       // Offset:   76 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cbPerFrame                        cbuffer      NA          NA            cb0      1 
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0 QUADEDGE   float       
// SV_TessFactor            1   x           1 QUADEDGE   float       
// SV_TessFactor            2   x           2 QUADEDGE   float       
// SV_TessFactor            3   x           3 QUADEDGE   float       
// SV_InsideTessFactor      0   x           4  QUADINT   float       
// SV_InsideTessFactor      1   x           5  QUADINT   float       
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// BEZIERPOS                0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// WORLDPOS                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Quadrilateral                          16
//
ds_5_0
dcl_input_control_point_count 16
dcl_tessellator_domain domain_quad
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input vDomain.xy
dcl_input vicp[16][0].xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_temps 10
mul r0.xy, vDomain.xyxx, vDomain.xyxx
mul r0.zw, vDomain.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000)
add r1.xy, -vDomain.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r2.xyzw, r1.xxyy, r1.xxyy
mul r1.zw, r0.zzzw, r2.yyyw
mul r0.xyzw, r0.xyzw, vDomain.xyxy
mul r3.xyz, r1.zzzz, vicp[5][0].yzxy
mul r4.xy, r1.xyxx, r2.ywyy
mad r3.xyz, vicp[4][0].yzxy, r4.xxxx, r3.xyzx
mul r4.zw, r1.xxxy, r0.zzzw
mul r1.xy, r1.xyxx, vDomain.xyxx
mad r3.xyz, vicp[6][0].yzxy, r4.zzzz, r3.xyzx
mad r3.xyz, vicp[7][0].yzxy, r0.xxxx, r3.xyzx
mul r5.xyz, r1.wwww, r3.zxyz
mul r6.xyz, r1.zzzz, vicp[1][0].yzxy
mad r6.xyz, vicp[0][0].yzxy, r4.xxxx, r6.xyzx
mad r6.xyz, vicp[2][0].yzxy, r4.zzzz, r6.xyzx
mad r6.xyz, vicp[3][0].yzxy, r0.xxxx, r6.xyzx
mad r5.xyz, r4.yyyy, r6.zxyz, r5.xyzx
mul r7.xyz, r1.zzzz, vicp[9][0].yzxy
mad r7.xyz, vicp[8][0].yzxy, r4.xxxx, r7.xyzx
mad r7.xyz, vicp[10][0].yzxy, r4.zzzz, r7.xyzx
mad r7.xyz, vicp[11][0].yzxy, r0.xxxx, r7.xyzx
mad r5.xyz, r4.wwww, r7.zxyz, r5.xyzx
mul r8.xyz, r1.zzzz, vicp[13][0].yzxy
mad r8.xyz, vicp[12][0].yzxy, r4.xxxx, r8.xyzx
mad r8.xyz, vicp[14][0].yzxy, r4.zzzz, r8.xyzx
mad r8.xyz, vicp[15][0].yzxy, r0.xxxx, r8.xyzx
mad r5.xyz, r0.yyyy, r8.zxyz, r5.xyzx
mov r5.w, l(1.000000)
dp4 o0.x, r5.xyzw, cb0[0].xyzw
dp4 o0.y, r5.xyzw, cb0[1].xyzw
dp4 o0.z, r5.xyzw, cb0[2].xyzw
dp4 o0.w, r5.xyzw, cb0[3].xyzw
mov o1.xyz, r5.xyzx
mul r4.xz, r1.xxyx, l(6.000000, 0.000000, 6.000000, 0.000000)
mad r1.xy, r1.xyxx, l(6.000000, 6.000000, 0.000000, 0.000000), -r0.zwzz
mad r2.yw, r2.yyyw, l(0.000000, 3.000000, 0.000000, 3.000000), -r4.xxxz
mul r2.xz, r2.xxzx, l(-3.000000, 0.000000, -3.000000, 0.000000)
mul r5.xyz, r2.yyyy, vicp[5][0].zxyz
mad r5.xyz, vicp[4][0].zxyz, r2.xxxx, r5.xyzx
mad r5.xyz, vicp[6][0].zxyz, r1.xxxx, r5.xyzx
mad r5.xyz, vicp[7][0].zxyz, r0.zzzz, r5.xyzx
mul r5.xyz, r1.wwww, r5.xyzx
mul r9.xyz, r2.yyyy, vicp[1][0].zxyz
mad r9.xyz, vicp[0][0].zxyz, r2.xxxx, r9.xyzx
mad r9.xyz, vicp[2][0].zxyz, r1.xxxx, r9.xyzx
mad r9.xyz, vicp[3][0].zxyz, r0.zzzz, r9.xyzx
mad r4.xyz, r4.yyyy, r9.xyzx, r5.xyzx
mul r5.xyz, r2.yyyy, vicp[9][0].zxyz
mad r5.xyz, vicp[8][0].zxyz, r2.xxxx, r5.xyzx
mad r5.xyz, vicp[10][0].zxyz, r1.xxxx, r5.xyzx
mad r5.xyz, vicp[11][0].zxyz, r0.zzzz, r5.xyzx
mad r4.xyz, r4.wwww, r5.xyzx, r4.xyzx
mul r5.xyz, r2.yyyy, vicp[13][0].zxyz
mul r3.xyz, r3.xyzx, r2.wwww
mad r2.yzw, r2.zzzz, r6.xxyz, r3.xxyz
mad r3.xyz, vicp[12][0].zxyz, r2.xxxx, r5.xyzx
mad r1.xzw, vicp[14][0].zzxy, r1.xxxx, r3.xxyz
mad r2.xyz, r1.yyyy, r7.xyzx, r2.yzwy
mad r2.xyz, r0.wwww, r8.xyzx, r2.xyzx
mad r0.xzw, vicp[15][0].zzxy, r0.zzzz, r1.xxzw
mad r0.xyz, r0.yyyy, r0.xzwx, r4.xyzx
mul r1.xyz, r2.xyzx, r0.xyzx
mad r0.xyz, r0.zxyz, r2.yzxy, -r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r0.xyzx
ret 
// Approximately 69 instruction slots used
