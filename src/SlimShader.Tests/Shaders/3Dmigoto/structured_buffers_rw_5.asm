//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for struct_buf_1
// {
//
//   struct foo
//   {
//       
//       float foo;                     // Offset:    0
//       uint bar;                      // Offset:    4
//       float baz;                     // Offset:    8
//       int buz;                       // Offset:   12
//       float4 f4;                     // Offset:   16
//       float4 g4;                     // Offset:   32
//       float oopsie;                  // Offset:   48
//       float4 m4;                     // Offset:   52
//       float4 n4;                     // Offset:   68
//
//   } $Element;                        // Offset:    0 Size:    84
//
// }
//
// Resource bind info for struct_buf_2
// {
//
//   struct bar
//   {
//       
//       float foofoo;                  // Offset:    0
//       uint foobar;                   // Offset:    4
//       float foobaz;                  // Offset:    8
//       int foobuz[8];                 // Offset:   12
//       float binary_decompiler_array_size_calculation_looks_sketchy;// Offset:   44
//       int2 really[3];                // Offset:   48
//       float sketchy;                 // Offset:   72
//       float3 did[5];                 // Offset:   76
//       float i;                       // Offset:  136
//       float4 mention[7];             // Offset:  140
//       float how_sketchy;             // Offset:  252
//
//   } $Element;                        // Offset:    0 Size:   256
//
// }
//
// Resource bind info for rw_struct_buf_1
// {
//
//   struct foo
//   {
//       
//       float foo;                     // Offset:    0
//       uint bar;                      // Offset:    4
//       float baz;                     // Offset:    8
//       int buz;                       // Offset:   12
//       float4 f4;                     // Offset:   16
//       float4 g4;                     // Offset:   32
//       float oopsie;                  // Offset:   48
//       float4 m4;                     // Offset:   52
//       float4 n4;                     // Offset:   68
//
//   } $Element;                        // Offset:    0 Size:    84
//
// }
//
// Resource bind info for rw_struct_buf_2
// {
//
//   struct bar
//   {
//       
//       float foofoo;                  // Offset:    0
//       uint foobar;                   // Offset:    4
//       float foobaz;                  // Offset:    8
//       int foobuz[8];                 // Offset:   12
//       float binary_decompiler_array_size_calculation_looks_sketchy;// Offset:   44
//       int2 really[3];                // Offset:   48
//       float sketchy;                 // Offset:   72
//       float3 did[5];                 // Offset:   76
//       float i;                       // Offset:  136
//       float4 mention[7];             // Offset:  140
//       float how_sketchy;             // Offset:  252
//
//   } $Element;                        // Offset:    0 Size:   256
//
// }
//
// Resource bind info for rw_prim_float3
// {
//
//   float3 $Element;                   // Offset:    0 Size:    12
//
// }
//
// Resource bind info for rw_prim_float4x4
// {
//
//   float4x4 $Element;                 // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// struct_buf_1                      texture  struct         r/o           t110      1 
// struct_buf_2                      texture  struct         r/o           t111      1 
// rw_struct_buf_1                       UAV  struct         r/w             u1      1 
// rw_struct_buf_2                       UAV  struct         r/w             u2      1 
// rw_prim_float3                        UAV  struct         r/w             u3      1 
// rw_prim_float4x4                      UAV  struct         r/w             u4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   x           0     NONE    uint   x   
// TEXCOORD                 1   x           1     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_structured t110, 84
dcl_resource_structured t111, 256
dcl_uav_structured u1, 84
dcl_uav_structured u2, 256
dcl_uav_structured u3, 12
dcl_uav_structured u4, 64
dcl_input_ps constant v0.x
dcl_input_ps linear v1.x
dcl_output o0.xyzw
dcl_temps 6
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r0.x, v0.x, l(4), u1.xxxx
store_structured u1.x, v0.x, l(0), v1.x
ftoi r0.y, v1.x
store_structured u1.x, l(3), l(12), r0.y
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r1.z, l(3), l(32), u1.xxxx
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r1.xy, l(3), l(40), u1.xyxx
store_structured u1.xyz, l(2), l(20), r1.yzxy
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r0.zw, l(3), l(76), u1.xxxy
store_structured u1.x, l(2), l(52), r0.w
store_structured u1.x, l(2), l(64), r0.z
ftou r1.y, v1.x
mov r1.xz, v1.xxxx
store_structured u2.xyz, v0.x, l(0), r1.xyzx
store_structured u2.x, v0.x, l(40), r0.y
ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r0.yzw, l(1), l(0), u3.xxyz
store_structured u3.xyz, l(0), l(0), r0.wyzw
ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r0.yz, l(3), l(0), u3.xxyx
store_structured u3.x, l(2), l(8), r0.z
store_structured u3.x, l(2), l(0), r0.y
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r1.xyzw, l(1), l(0), u4.xyzw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r2.xyzw, l(1), l(16), u4.xzyw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r3.xyzw, l(1), l(32), u4.xywz
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r4.xyzw, l(1), l(48), u4.xyzw
mov r5.x, r1.x
mov r5.y, r2.x
mov r5.z, r3.x
mov r5.w, r4.x
store_structured u4.xyzw, l(0), l(0), r5.xyzw
mov r5.x, r1.y
mov r5.y, r2.z
mov r5.z, r3.y
mov r5.w, r4.y
store_structured u4.xyzw, l(0), l(16), r5.xyzw
mov r2.x, r1.z
mov r3.x, r1.w
mov r3.y, r2.w
mov r2.z, r3.w
mov r2.w, r4.z
mov r3.w, r4.w
store_structured u4.xyzw, l(0), l(32), r2.xyzw
store_structured u4.xyzw, l(0), l(48), r3.xyzw
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r0.y, l(2), l(4), t110.xxxx
utof r0.xy, r0.xyxx
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r0.z, l(0), l(0), t110.xxxx
add r0.y, r0.y, r0.z
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r0.z, l(1), l(8), t110.xxxx
add r0.y, r0.z, r0.y
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r0.z, l(3), l(12), t110.xxxx
itof r0.z, r0.z
add r0.y, r0.z, r0.y
iadd r0.zw, v0.xxxx, l(0, 0, 1, 2)
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r1.xyzw, r0.z, l(16), t110.xyzw
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r2.xyzw, r0.w, l(32), t110.xyzw
dp4 r1.x, r1.xyzw, r2.xyzw
add r0.y, r0.y, r1.x
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r1.xyzw, r0.z, l(52), t110.xyzw
ld_structured_indexable(structured_buffer, stride=84)(mixed,mixed,mixed,mixed) r2.xyzw, r0.w, l(68), t110.xyzw
dp4 r0.z, r1.xyzw, r2.xyzw
add r0.y, r0.z, r0.y
ld_structured_indexable(structured_buffer, stride=256)(mixed,mixed,mixed,mixed) r1.xyz, v0.x, l(0), t111.xyzx
add r0.y, r0.y, r1.x
utof r0.z, r1.y
add r0.y, r0.z, r0.y
add r0.y, r1.z, r0.y
ld_structured_indexable(structured_buffer, stride=256)(mixed,mixed,mixed,mixed) r0.zw, v0.x, l(40), t111.xxxy
itof r0.z, r0.z
add r0.y, r0.z, r0.y
add r0.y, r0.w, r0.y
ld_structured_indexable(structured_buffer, stride=256)(mixed,mixed,mixed,mixed) r0.zw, v0.x, l(68), t111.xxxy
itof r0.z, r0.z
add r0.y, r0.z, r0.y
add r0.y, r0.w, r0.y
ld_structured_indexable(structured_buffer, stride=256)(mixed,mixed,mixed,mixed) r0.zw, v0.x, l(132), t111.xxxy
add r0.y, r0.z, r0.y
add r0.y, r0.w, r0.y
ld_structured_indexable(structured_buffer, stride=256)(mixed,mixed,mixed,mixed) r0.zw, v0.x, l(248), t111.xxxy
add r0.y, r0.z, r0.y
add r0.y, r0.w, r0.y
add o0.xyzw, r0.xxxx, r0.yyyy
ret 
// Approximately 80 instruction slots used
